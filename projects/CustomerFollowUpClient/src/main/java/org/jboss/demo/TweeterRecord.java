package org.jboss.demo;

import javax.persistence.*;
import java.lang.String;
import java.util.Date;

/**
 * Simple tweeter record
 */
@Entity
@Table(name = "tweets") // @Table is optional, but "user" is a keyword in many SQL varia
public class TweeterRecord {
    @Id // @Id indicates that this it a unique primary key
//    @GeneratedValue // @GeneratedValue indicates that value is automatically generated by the server
    private Long id;

    @Column
    private String user;

    @Column
    private String uniqueName;

    @Column
    private String message;

    @Column
    private String tag;

    @Column
    private Date tweetDate;

    @Column
    private boolean salesforce;

    public TweeterRecord() {
    }

    public String getUser() {
        return user;
    }

    public void setUser(String user) {
        this.user = user;
    }

    public Date getTweetDate() {
        return tweetDate;
    }

    public void setTweetDate(Date tweetDate) {
        this.tweetDate = tweetDate;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public String getTag() {
        return tag;
    }

    public void setTag(String tag) {
        this.tag = tag;
    }

    public String getUniqueName() {
        return uniqueName;
    }

    public void setUniqueName(String uniqueName) {
        this.uniqueName = uniqueName;
    }

    public boolean isSalesforce() {
        return salesforce;
    }

    public void setSalesforce(boolean salesforce) {
        this.salesforce = salesforce;
    }

    @Override
    public String toString() {
        return "TweeterRecord{" +
                "id=" + id +
                ", user='" + user + '\'' +
                ", message='" + message + '\'' +
                ", tag='" + tag + '\'' +
                ", tweetDate=" + tweetDate +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        TweeterRecord that = (TweeterRecord) o;

        if (id != null ? !id.equals(that.id) : that.id != null) return false;
        if (message != null ? !message.equals(that.message) : that.message != null) return false;
        if (tag != null ? !tag.equals(that.tag) : that.tag != null) return false;
        if (tweetDate != null ? !tweetDate.equals(that.tweetDate) : that.tweetDate != null) return false;
        if (user != null ? !user.equals(that.user) : that.user != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = id != null ? id.hashCode() : 0;
        result = 31 * result + (user != null ? user.hashCode() : 0);
        result = 31 * result + (message != null ? message.hashCode() : 0);
        result = 31 * result + (tag != null ? tag.hashCode() : 0);
        result = 31 * result + (tweetDate != null ? tweetDate.hashCode() : 0);
        return result;
    }
}
